 Creación de repositorio para la práctica

1. Con el navegador, dirígete al repositorio ptavi-p5 en la cuenta del profesor en GitHub1 y realiza un fork, de manera que consigas tener una copia del repositorio en tu cuenta de GitHub. Clona el repositorio que acabas de crear a local para poder editar los archivos. Trabaja a partir de ahora en ese repositorio, sincronizando los cambios que vayas realizando.

Como tarde al final de la práctica, deberás realizar un push para subir tus cambios a tu repositorio en GitHub. En esta práctica, al contrario que con las demás, se recomienda hacer frecuentes commits, pero el push al final.

================================================================================
================================================================================

Análisis de una sesión SIP

Se ha capturado una sesión SIP (archivo sip.cap.gz), que se puede abrir con Wireshark2. Se pide rellenar las cuestiones que se plantean en este guión en el fichero p5.txt que encontrarás también en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes cuestiones:
 ** ¿Cuántos paquetes componen la captura?
    La captura se compone de 954 paquetes.
    
 ** ¿Cuánto tiempo dura la captura?
    La captura tiene una duración de 56.149645 segundos.
    
 ** ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
    El usuario que inicia la captura, es el que la realiza: 192.168.1.34.
    Al estar realizando una peticion a mi servidor publico de DNS, la maquina donde comienzo la captura es una maquina con IP privada.
    

3. Antes de analizar las tramas, mira las estadísticas generales que aparecen en el menú de Statistics. En el apartado de jerarquía de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico correspondiente al protocolo TCP y UDP.
 ** ¿Cuál de los dos es mayor? ¿Es esto consistente con una aplicación que transmite en tiempo real?
    El protocolo UDP, tiene un mayor porcentaje (96.2%).
    Si, ya que la mayor parte de la captura se realiza sobre UDP, que permite la transmision en tiempo real de una aplicación.
    
 ** ¿Qué otros protocolos podemos ver en la jerarquía de protocolos?
    Encontramos protocolos como TCP (2.1%) y ICMP (0.6%).
    Dentro de UDP, encontramos tambien RTP (86.4% sobre el 96.2%) y RTCP (0.2% sobre el 96.2%).


4. Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs. La captura que estamos viendo incluye desde la inicialización (registro) de la aplicación hasta su finalización, con una llamada entremedias.
 ** Filtra por sip para conocer cuándo se envían paquetes SIP. ¿En qué segundos tienen lugar esos envíos?
    Los envios tienen lugar en los segundos 6-8, 13-15, 15-17, 37-40 y 54 hasta el final (cierre de conexión).
    
 ** Y los paquetes con RTP, ¿cuándo se envían?
    Los envios de estos paquetes tienen lugar en los segundos 16 al 22 y 22 al 38.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las primeras cuatro tramas de la captura nada más arrancar Ekiga.
 ** ¿Qué servicio es el utilizado en estas tramas?
    En estas primeras cuatro tramas al capturar Ekiga encontramos DNS.
    
 ** ¿Cuál es la dirección IP del servidor de nombres del ordenador que ha lanzado Ekiga?
    80.58.61.250
 
 ** ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
    86.64.162.35
    
 ** ¿Por qué se pide también para 35.162.64.86.in-addr.arpa?
    Porque es la resolucion inversa de la IP.

6. A continuación, hay más de una docena de tramas TCP/HTTP.
 ** ¿Podrías decir la URL que se está pidiendo?
    httop://ekiga.net/ip/
    
 ** ¿Qué user agent (UA) la está pidiendo?
    Ekiga
 
 ** ¿Qué devuelve el servidor?
    Delvuele el numero de IP 83.36.48.212
 
 ** Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el servidor?
    Recibimos una IP 212.128.254.159; el servidor esta respondiendo con la IP 83.36.48.212, por lo que tenemos una NAT


7. Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.
 ** ¿Por qué crees que se hace uso de este protocolo en esta captura? Busca en la Wikipedia.
    Se trata de un protocolo de red del tipo cliente/servidor que permite a clientes NAT encontrar su dirección IP pública, el tipo de NAT en el que se encuentra y el puerto de Internet asociado con el puerto local a través de NAT. Con esta informacion podemos configurar una comunicacion UDP para dos maquinas que se encuentran en distintas NAT.
 
 ** ¿Estamos tras un NAT?
    Si

8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo usuario registra su localización en un servidor Registrar. El Registrar guarda información sobre los usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.
 ** ¿Qué dirección IP tiene el servidor Registrar?
    El servidor tiene como direccion IP 86.64.162.35
    
 ** ¿A qué puerto (del servidor Registrar) se envían los paquetes SIP?
    Los paquetes SIP se envian al puerto 5060 del servidor Resgistrar.
    
 ** ¿Qué método SIP utiliza el UA para registrarse?
    El método que utiliza el protocolo de SIP es REGISTER
    
 ** Además de REGISTER, ¿qué instrucciones SIP entiende el UA?
    Además de REGISTER, en la captura, el UA entiende SUSCRIBE, INVITE, ACK y BYE.
    Un usuario entiende también instrucciones como OPTIONS, CANCEL, NOTIFY, REFER, MESSAGE.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
 ** ¿Se registra con éxito en el primer intento?
    No
    
 ** ¿Cómo sabemos si el registro se ha realizado correctamente o no?
    Recibimos una trama SIP con el Status: 401 Unauthorized, en caso de no tener éxito en el registro.
    Si por el contrario conseguimos registrarnos, recibimos: Status: 200 OK
 
 ** ¿Podrías identificar las diferencias entre el primer intento y el segundo de registro? (fíjate en el tamaño de los paquetes y mira a qué se debe el cambio)
    En el segundo intento podemos observar que el tamaño de los paquetes es mayor, ya que necesita una línea de autorización que le permita completar la acción de registro.
 
 ** ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica las unidades.
    En la instrucción del registro podemos observar que el valor de Expires es de 3600 segundos, tras los cuales, la sesion se cerrará.


10. Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de eco de Ekiga que nos permite comprobar si nos hemos conectado correctamente. El servicio de eco tiene la dirección sip:500@ekiga.net. Veamos el INVITE de cerca.
 ** ¿Puede verse el nombre del que efectúa la llamada, así como su dirección SIP?
    Podemos encontrar el nombre de quien realiza la llamada, Gregorio Robles; asi como su dirección SIP: sip:grex@ekiga.net
 
 ** ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
    Contiene los campos: o (creador de la sesión), s (nombre de la sesión), c (información de conexión), t (tiempo activo), m (descripción de media), y a (atributo de media)   
    application/sdp
    
 ** ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
    No tiene exito en el primer intento, requiere de una autenticación del proxy.
 
 ** ¿En qué se diferencia el segundo INVITE más abajo del primero? ¿A qué crees que se debe esto?
    Al igual que en el punto anterior, el segundo intento incluye una autenticación del proxy que es requerida para una correcta conexión y establecimiento de llamada.
    

11. Una vez conectado, estudia el intercambio de tramas.
 ** ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
    En el intercambio de la trama podemos diferenciar 3 protocolos: RTP, RTCP y H.261.
     - RTP es el protocolo básico de transporte de tráfico multimedia en internet en tiempo real.
     - RTCP es el protocolo que proporciona información de control sobre la calidad de transmisión en tiempo real.
     - H.261 es el protocolo de codificación actual de vídeo.
    
 ** ¿Cuál es el tamaño de paquete de los mismos?
    RTP : 214 bytes
    RTCP : 43 bytes
    H.261 : tamaño variable en bytes, pero claramente son más grandes.
    
 ** ¿Se utilizan bits de padding?
    No
    
 ** ¿Cuál es la periodicidad de los paquetes que se envían?
    Los paquetes se envían cada 20 milisegundos   .
 
 ** ¿Cuántos bits/segundo estamos enviando?
    64 Kbits/segundo


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una opción RTP. Empecemos mirando los flujos RTP.
 ** ¿Cuántos flujos hay? ¿por qué?
 ** ¿Cuántos paquetes se pierden?
 ** ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el valor de delta?
 ** ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué quiere decir eso? ¿Estamos ante una conversación de calidad?


13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony -> RTP -> Stream Analysis.
 ** ¿Cuánto valen el delta y el jitter para el primer paquete que ha llegado?
 ** ¿Podemos saber si éste es el primer paquete que nos han enviado?
 ** Los valores de jitter son menores de 10ms hasta un paquete dado. ¿Cuál?
 ** ¿A qué se debe el cambio tan brusco del jitter?
 ** ¿Es comparable este cambio con el tiempo desde la recepción del paquete anterior? ¿Por qué?
 ** ¿Cuál es la dependencia entre el tiempo transcurrido desde el paquete anterior y el valor de jitter?


14. En Telephony selecciona el menú VoIP calls. Verás que se lista la llamada de voz IP capturada en una ventana emergente. Selecciona esa llamada y pulsa el botón Graph.
 ** ¿Cuánto dura la conversación?
 ** ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?


15. Identifica la trama donde se finaliza la conversación.
 ** ¿Qué método SIP se utiliza?
 ** ¿En qué trama(s)?
 ** ¿Por qué crees que se envía varias veces?


16. Finalmente, se cierra la aplicación de VozIP.
 ** ¿Por qué aparece una instrucción SIP del tipo REGISTER?
 ** ¿En qué trama sucede esto?
 ** ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

================================================================================
================================================================================

Captura de una sesión SIP

Captura una sesión SIP de una conversación con el número SIP sip:9999@qxip.net. Tendrás que dar de alta una cuenta en www.ekiga.net con el navegador. Recuerda también que has de comenzar a capturar tramas antes de arrancar Ekiga para ver todo el proceso en el que participa SIP. Para realizar los siguientes ejercicios, deberás crearte una cuenta en ekiga.net y darte de alta la lanzar la aplicación.

17. Observa las diferencias en el inicio de la conversación entre el entorno del laboratorio y el del ejercicio anterior:
 ** ¿Es necesario el uso de DNS y STUN? ¿Por qué?
    Si, porque DNS te asigna tu IP; y STUN es para conocer tu IP pública.
    
 ** ¿Son diferentes el registro y la descripción de la sesión?
    No, son iguales.
    

18. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
 ** ¿Cuántos flujos tenemos?
    Podemos ver que tenemos dos flujos; ambos de audio (uno de ida y otro de vuelta).
    
 ** ¿Cuál es su periodicidad?
    Cada flujo tiene una periocididad de 0.02 segundos.
    
 ** ¿Cuánto es el valor máximo del delta y los valores medios y máximo del jitter?
                                        Flujo 1         Flujo 2
    Máx. Delta -->                      30.632          70.818
    Valor medio del jitter -->          2.675           1.563
    Valor máx. del jitter -->           4.844           6.461
 
 ** ¿Podrías reproducir la conversación desde Wireshark? ¿Cómo? Comprueba que poniendo un valor demasiado pequeño para el buffer de jitter, la conversación puede no tener la calidad necesaria.
    Si, siguiendo los siguientes pasos:
    Seleccionando un paquete RTP, Telephony, RTP, Stream Analysis, Play Stream.
    El parametro jitter buffer, al variar su valor minimizandolo encontramos mas silencios de espera.
    
 ** ¿Sabrías decir qué tipo de servicio ofrece sip:9999@qxip.net?
    En la practica hemos contactado con music@iptel.org que ofrece un servicio de audio.    



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

19. Filtra por los paquetes SIP de la captura y guarda únicamente los paquetes SIP como sip.libpcap. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás guardarlo en un archivo de nombre p5.libpcap y añadirlo al repositorio.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

[Recuerda mirar el guión para ver las instrucciones de entrega]
